package jwabbit.gui;

/*
 * This software was derived from the Wabbitemu software, as it existed in October 2015, by Steve Benoit. This software
 * is licensed under the GNU General Public License version 2 (GPLv2). See the disclaimers or warranty and liability
 * included in the terms of that license.
 */

/**
 * The set of possible actions generated by the menu bar.
 */
enum EAction {

    /** Create a new calculator. */
    newCalc("NEW"),

    /** Opens a new file into the current calculator. */
    open("OPEN"),

    /** Save a ROM, OS, or save state from the current calculator. */
    save("SAVE"),

    /** Start or stop recording of a GIF. */
    recordGif("REC_GIF"),

    /** Take a screenshot. */
    screenshot("SCRNSHOT"),

    /** Start or stop recording a movie. */
    startRecord("REC_START"),

    /** Start or stop recording a movie. */
    endRecord("REC_STOP"),

    /** Close the current calculator. */
    close("CLOSE"),

    /** Exit (closes all open calculators). */
    exit("EXIT"),

    /** Enable or disable skin. */
    enableSkin("EN_SKIN"),

    /** Displays the frame with variable view. */
    viewVariables("VIEW_VAR"),

    /** Displays the frame with key press history. */
    viewKeypressHistory("VIEW_KEY"),

    /** Displays the detached LCD frame. */
    viewDetachedLCD("VIEW_LCD"),

    /** Enable sound. */
    enableSound("EN_SND"),

    /** Enable sound. */
    disableSound("DIS_SND"),

    /** Enable or disable virtual link. */
    enableLink("EN_LINK"),

    /** Get last answer. */
    getAnswer("GET_ANS"),

    /** Copy last answer to clipboard. */
    copyAnswer("COPY_ANS"),

    /** Paste clipboard into calculator. */
    paste("PASTE"),

    /** Pause calculator. */
    pause("PAUSE"),

    /** Set speed to 25%. */
    speed25("SP25"),

    /** Set speed to 50%. */
    speed50("SP50"),

    /** Set speed to 100%. */
    speed100("SP100"),

    /** Set speed to 200%. */
    speed200("SP200"),

    /** Set speed to 400%. */
    speed400("SP400"),

    /** Set speed to maximum. */
    speedMax("SPMAX"),

    /** Profile for all functions enabled. */
    profileFull("PROFILE_FULL"),

    /** Profile for graphing calculator without matrix/solve/calc. */
    profileGraphing("PROFILE_GRAPH"),

    /** Profile for scientific calculator without matrix/solve/calc/graph/list/stat. */
    profileScientific("PROFILE_SCIENTIFIC"),

    /** Profile for basic calculator without matrix/solve/calc/graph/list/stat/trig. */
    profileBasic("PROFILE_BASIC"),

    /** Show dialog to set emulator options. */
    options("OPTIONS"),

    /** Resets the current calculator. */
    reset("RESET"),

    /** Shows the debugger for the current calculator. */
    debug("DEBUG"),

    /** Turns the current calculator on. */
    turnOn("TURNON"),

    /** Runs the setup wizard on the current calculator. */
    runWizard("WIZARD"),

    /** Checks the Internet for updates to the calculator emulator. */
    checkUpdates("UPDATES"),

    /** Shows a popup with what's new by version. */
    showWhatsNew("WHATSNEW"),

    /** Opens a web page to report an emulator bug. */
    reportBug("BUG"),

    /** Opens the main project website. */
    openWebSite("WEB"),

    /** Shows a dialog with information about the calculator. */
    about("ABOUT");

    /** The action command. */
    private final String cmd;

    /**
     * Constructs a new {@code EActions}.
     *
     * @param theCmd the action command
     */
    EAction(final String theCmd) {

        this.cmd = theCmd;
    }

    /**
     * Gets the action command.
     *
     * @return the action command
     */
    public String getCmd() {

        return this.cmd;
    }

    /**
     * Given an action command, finds the corresponding action.
     *
     * @param theCmd the command
     * @return the action; null if none corresponds to the command
     */
    static EAction fromCommand(final String theCmd) {

        for (final EAction test : values()) {
            if (test.cmd.equals(theCmd)) {
                return test;
            }
        }
        return null;
    }
}
